// {
//     "rules": {
//       "development_guidelines": {
//         "description": "Guidelines for developing React components with TypeScript and Tailwind CSS.",
//         "enabled": true,
//         "rules": [
//           {
//             "description": "Use Tailwind CSS classes directly in React components. Avoid creating custom CSS (unless absolutely necessary and scoped appropriately)."
//           },
//           {
//             "description": "Structure components into small, reusable units."
//           },
//                   {
//             "description": "Use React Query for data fetching and caching wherever appropriate."
//           },
//           {
//             "description": "Handle all possible states with conditional rendering. E.g., Loading, Error, Empty, Success."
//           }
//         ]
//       },
  
//       "coding_style": {
//         "description": "Guidelines for maintaining consistent coding style.",
//         "enabled": true,
//         "rules": [
//           {
//             "description": "Code files must start with a comment indicating the path and filename:  `// src/components/MyComponent.tsx`"
//           },
//           {
//             "description": "Comments should explain the *why*, not the *what*.  Describe the reasoning behind the code, not just what it's doing."
//           },
//           {
//             "description": "Prioritize component composition, DRY (Don't Repeat Yourself) principles."
//           },
//           {
//             "description": "Use consistent naming conventions for variables, functions, and components (e.g., camelCase for variables and functions, PascalCase for components)."
//           },
//           {
//             "description": "Format code consistently using Prettier or ESLint with auto-formatting on save."
//           }
//         ]
//       }
//     }
//   }